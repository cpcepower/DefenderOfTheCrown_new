;; ---------------------------TXT_GET_CURSOR; ---------------------------	ld hl,(screen_text_cursor_position_xy)	; &b726	inc l	inc h	ret; ---------------------------TXT_SET_COLUMN; ---------------------------	ld hl,(screen_text_cursor_position_xy)	; &b726	ld h,a	jr TXT_SET_CURSOR_COLUMN; ---------------------------TXT_SET_CURSOR:; ---------------------------;	ld a,(&b729);	dec a;	add a,l;	ld l,a;	ld a,(&b72A);	dec a;	add a,h;	ld h,a	dec lTXT_SET_CURSOR_COLUMN	dec h	ld (screen_text_cursor_position_xy),hl ; &b726	ret;_lbb5a	; TXT OUTPUT;;	push af;	push bc;	push de;	push hl;;	ld hl,(&b726)	; cursor xy position;	inc h;	ld (&b726),hl;	call WR_CHAR;	pop hl;	pop de;	pop bc;	pop af;	ret;; ---------------------------;WR_CHAR;Remplace l'indirection TXT WRITE CHAR.(#BDD3);Permet d'utiliser TXT OUTPUT malgre la police reduite;A contient le caractere a ecrire;H contient la colonne;L contient la ligne;TXT_OUTPUT; ---------------------------;	push af	push bc	push de	push hl;	cp 10;	jr nz,TXT_NO_CR;	ld h,a;	ld a,(screen_text_cursor_position_xy+1);	ld l,0TXT_NO_CRscreen_text_cursor_position_xy equ $+1	ld hl,0	push hl	push ix	sub " "	ld ix,police	ld d,0	ld e,a	add ix,de	add ix,de	add ix,de;;	LD DE,#F333  ;D=PAPER E=PEN	call SCR_CHAR_POSITION	ld bc,&7301	ld de,&f311wr_char0 push hl	ld (hl),d	inc hl	ld (hl),d	dec hl	ld a,(ix+00)	and c	jr z,wr_char1	ld (hl),bwr_char1 ld a,(ix+01)	and c	jr z,wr_char2	ld a,(hl)	and #aa	or e	ld (hl),awr_char2 ld a,(ix+02)	and c	jr z,wr_char3	inc hl	ld (hl),bWR_CHAR3	pop hl	INLINE_BC26_HL	sla c	jr nz,wr_char0	pop ix	pop hl	inc h	ld (screen_text_cursor_position_xy),hl	pop hl	pop de	pop bc;	pop af	ret; 54(66); ---------------------------SCR_CHAR_POSITION:;_lbc1a; ---------------------------; Action Gets the memory address of the top left corner of a specified character position; Entry H contains the character physical column and L contains the character physical row; ---------------------------	push de;call #0b0c;ld a,(#b7c3)	; b7c3 - mode number;cp #01;ld b,#04;jr c,l0b77;ld b,#02;jr z,l0b77;dec b.l0b77;push bc	ld e,h	ld d,#00	ld h,d	push de	ld d,h	ld e,l	add hl,hl	add hl,hl	add hl,de	add hl,hl	add hl,hl	add hl,hl	add hl,hl	pop de;.l0b87	add hl,de	add hl,de  ; 2x -> b = 1 for mode 0;djnz l0b87;ld de,(#b7c4)	; b7c4 - screen offset;add hl,de;	ld a,h;	and #07;	ld h,a	ld a,SCREEN_ADDRESS/&100	; b7c6 - screen base HB (LB taken as &00)	add h	ld h,a;pop bc	pop de	ret;25(27);SCR_CHAR_POSITION:;	ld de,screen_address_table;	ld a,l		; Y;	add a,a		; Y*2;	jr nc,calculate_first_screen_address_incy_nocarry_clipx;	inc d;calculate_first_screen_address_incy_nocarry_clipx;	add a,e;	ld e,a;	adc a,d;	sub e;	and screen_address_table/&100+1;	ld d,a;	ld a,(de);;	sra h;	add a,h		; add X;	ld l,a;	inc e;	ld a,(de)					; the high address of the current screen;	add a,SCREEN_ADDRESS/&100			; add it to save_background address already calculated;	ld h,a						; hl = real screen address;	ret;;POLICE;POLICE	db #00,#00,#00 ;	db #00,#5E,#00 ;!	db #06,#00,#06 ;";	db #28,#6C,#28 ;#	db #3A,#41,#3A ;# = u circonflexe	db #58,#D5,#34 ;$	db #64,#10,#4C ;%;	db #34,#6A,#54 ;&	db #66,#55,#7A ;& = a circonflexe	db #00,#06,#00 ;'	db #3E,#41,#00 ;(	db #41,#3E,#00 ;)	db #54,#38,#54 ;*	db #10,#7C,#10 ;+	db #E0,#00,#00 ;,	db #10,#10,#10 ;-	db #60,#00,#00 ;.	db #60,#18,#06 ;/	db #3C,#42,#3C ;0	db #44,#7E,#40 ;1	db #62,#52,#4C ;2	db #42,#4A,#34 ;3	db #1E,#10,#7C ;4	db #4E,#4A,#32 ;5	db #3C,#4A,#32 ;6	db #02,#72,#0E ;7	db #34,#4A,#34 ;8	db #4C,#52,#3C ;9	db #6C,#00,#00 ;:	db #EC,#00,#00 ;;	db #10,#28,#44 ;<	db #28,#28,#28 ;=	db #44,#28,#10 ;>	db #04,#52,#0C ;?;	db #3C,#42,#5C ;@	db #04,#72,#04 ;@ = i circonflexe;	db #7C,#12,#7C ;A	db #7E,#4A,#34 ;B	db #3C,#42,#24 ;C	db #7E,#42,#3C ;D	db #3C,#4A,#42 ;E	db #7C,#0A,#02 ;F	db #3C,#42,#74 ;G	db #7E,#10,#7E ;H	db #42,#7E,#42 ;I	db #22,#42,#3E ;J	db #7E,#08,#76 ;K	db #7E,#40,#40 ;L	db #7E,#04,#7E ;M	db #7E,#02,#7C ;N	db #3C,#42,#3C ;O	db #7E,#12,#0C ;P	db #3C,#62,#BC ;Q	db #7C,#12,#6C ;R	db #44,#5A,#22 ;S	db #02,#7E,#02 ;T	db #3E,#40,#3E ;U	db #1E,#60,#1E ;V	db #7E,#20,#7E ;W	db #66,#18,#66 ;X	db #06,#78,#06 ;Y	db #62,#5A,#46 ;Z;;	db #7F,#41,#00 ;[;	db #06,#18,#60 ;\;	db #41,#7F,#00 ;];	db #04,#7E,#04 ;^;	db #40,#40,#40 ;_;	db #02,#04,#00 ;`	db #3A,#55,#59 ;e aigu	db #3A,#55,#5A ;e circonflexe	db #39,#55,#5A ;e grave	db #65,#55,#7A ;a grave	db #3D,#41,#3A ;u grave	db #3A,#45,#3A ;o circonflexe;	db #64,#54,#78 ;a	db #3E,#44,#38 ;b	db #38,#44,#44 ;c	db #38,#44,#3E ;d	db #38,#54,#58 ;e	db #08,#7C,#0A ;f	db #98,#A4,#78 ;g	db #7E,#08,#70 ;h	db #00,#74,#00 ;i	db #80,#7A,#00 ;j	db #7E,#18,#64 ;k	db #00,#3E,#40 ;l	db #7C,#04,#7C ;m	db #7C,#04,#78 ;n	db #38,#44,#38 ;o	db #F8,#44,#38 ;p	db #38,#44,#F8 ;q	db #78,#04,#04 ;r	db #48,#54,#24 ;s	db #04,#3E,#44 ;t	db #3C,#40,#3C ;u	db #1C,#60,#1C ;v	db #7C,#20,#7C ;w	db #6C,#10,#6C ;x	db #8C,#90,#7C ;y	db #64,#54,#4C ;z;