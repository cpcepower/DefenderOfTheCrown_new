;;;Sons de music studio;	read "DoTC_Constants.asm"	read "DoTC_Macros.asm"	write direct "a:DEFENDER.SON",MUSBUF         ORG  MUSBUF;PERIODE  EQU  6;         JP   EXECU         JP   STOPPE         JP   RELAN         JP   INFOS;NBMESUR  DEFB 0;INFOS    LD   IX,CANAL1         LD   A,(IX+9)         NOP         NOP         NOP         NOP         LD   (NBMESUR),A         RET;;EXECU(A-Nb param,IX-Table param);   Demarre l'executionEXECU         CP   3         RET  NC         OR   A         RET  Z         LD   DE,&FFFF         CP   2         JR   NZ,NOCOUNT         LD   D,(IX+1)         LD   E,(IX+0)         INC  IX         INC  IXNOCOUNT  LD   B,(IX+1)         LD   C,(IX+0)         CALL INIT         JP   RELAN;;RELAN();   Relance le ticker blocRELAN;         LD   HL,TICKVAL;         LD   DE,TICKBLK;         LD   BC,&0009;         LDIR;         LD   HL,TICKBLK;         JP   SET_TICK	MUSIC_ON	ret;;STOPPE();   Suspend l'executionSTOPPE	MUSIC_OFF	jp psg_sound_reset;;TICKROUT();   Routine sous IT.TICKROUT         PUSH IX         PUSH IY         PUSH HL         PUSH DE         PUSH AF         PUSH BC         LD   IY,CHAN_FL         LD   IX,CANAL1         LD   A,(IY+0)         OR   A         CALL NZ,EXECHAN         LD   A,(IY+1)         LD   IX,CANAL2         OR   A         CALL NZ,EXECHAN         LD   IX,CANAL3         LD   A,(IY+2)         OR   A         CALL NZ,EXECHAN         LD   A,(IY+0)         OR   (IY+1)         OR   (IY+2)         CALL Z,STOPPE         LD   A,(TCK_COUNT)         DEC  A         JR   NZ,TICKROU0         CALL SENDALL         LD   A,(PERIO)TICKROU0 LD   (TCK_COUNT),A         POP  BC         POP  AF         POP  DE         POP  HL         POP  IY         POP  IX         RET;;INIT(BC-Mesure,DE-Nb mesures);   Prepare l'executionINIT         LD   HL,CANAL0         PUSH BC         PUSH DE         LD   DE,CANAL1         LD   BC,16         LD   A,1         PUSH HL         PUSH BC         LDIR         POP  BC         POP  HL         LD   (CANAL1+11),A         PUSH HL         PUSH BC         LD   DE,CANAL2         LDIR         POP  BC         POP  HL         INC  A         LD   (CANAL2+11),A         LD   DE,CANAL3         LDIR         INC  A         LD   (CANAL3+11),A         LD   A,1         LD   (TCK_COUNT),A         LD   IY,CHAN_FL         LD   (IY+0),A         LD   (IY+1),A         LD   (IY+2),A         POP  DE         POP  BC         LD   HL,(ADDR1)         LD   IX,CANAL1         LD   (IX+&09),E         LD   (IX+&0A),D         PUSH DE         PUSH BC         CALL SETDEB         POP  BC         POP  DE         PUSH BC         PUSH DE         LD   IX,CANAL2         LD   HL,(ADDR2)         LD   (IX+&09),E         LD   (IX+&0A),D         CALL SETDEB         POP  DE         POP  BC         LD   IX,CANAL3         LD   HL,(ADDR3)         LD   (IX+&09),E         LD   (IX+&0A),D;;SETDEB(BC-Mesure de depart,HL-Adresse 1ere mesure,IX-Data du canal);   Fait pointer sur la mesure de departSETDEB         LD   A,B         OR   C         JR   Z,SETDE2         PUSH BCSETDE0   LD   A,(HL)         BIT  7,A         JR   Z,SETDE1         CALL RDCOM         JR   SETDE0SETDE1   LD   A,(HL)         INC  HL         OR   A         JR   NZ,SETDE1         POP  BC         DEC  BC         JR   SETDEBSETDE2   LD   (IX+7),L  ;Add musique         LD   (IX+8),H         RET;CANAL0   ;Valeur d'initialisation         DEFB #00,#00,#01,#00         DEFB #01,#03,#01,#00         DEFB #00,#00,#00,#00         DEFB #01,#01,#00,#00;;RDCOM(A-Commande,HL-Pointeur execution,IX-data du canal);   Lit et execute une commandeRDCOM         AND  7         DEC  A         JR   NZ,RDCOM1         LD   A,(HL)         INC  HL         BIT  3,A         LD   A,0         JR   Z,RDCOM0         INC  ARDCOM0   LD   (IX+2),A         RETRDCOM1   DEC  A         JR   NZ,RDCOM2         INC  HL         LD   A,(HL)         LD   (IX+0),A         LD   (IX+&0E),A         INC  HL         LD   A,(HL)         LD   (IX+1),A         LD   (IX+&0F),A         INC  HL         RETRDCOM2   DEC  A         JR   NZ,RDCOM3         INC  HL         LD   A,(HL)         INC  HL         LD   (IX+&0D),A         RETRDCOM3   DEC  A         JR   NZ,RDCOM4         INC  HL         RETRDCOM4   DEC  A         JR   NZ,RDCOM5         INC  HL         LD   A,(HL)         AND  &0F         INC  A         LD   (IX+3),A         LD   A,(HL)         SRL  A         SRL  A         SRL  A         SRL  A         INC  A         LD   (IX+4),A         INC  HL         RETRDCOM5   DEC  A         JR   NZ,RDCOM6         LD   A,(HL)         AND  &3F         SRL  A         SRL  A         SRL  A         LD   (IX+5),A         INC  HL         RETRDCOM6   DEC  A         INC  HL         RET  NZ         LD   A,(HL)         INC  HL         PUSH HL         PUSH IX         LD   B,(IX+&0B) ;Note no         AND  &0F         LD   C,A         CALL SETVOL         POP  IX         POP  HL         RET;;Structures de donnee des canaux;CANAL1         DEFB #00,#00,#00,#00         DEFB #00,#00,#00,#00         DEFB #00,#00,#01,#00         DEFB #00,#00,#00,#00CANAL2         DEFB #00,#00,#00,#00         DEFB #00,#00,#00,#00         DEFB #00,#00,#02,#00         DEFB #00,#00,#00,#00CANAL3         DEFB #00,#00,#00,#00         DEFB #00,#00,#00,#00         DEFB #00,#00,#03,#00         DEFB #00,#00,#00,#00NOTE1         DEFB #08,#08,#00,#00         DEFB #00,#00,#00,#00         DEFB #00,#00,#00,#00NOTE2         DEFB #10,#09,#02,#00         DEFB #00,#00,#00,#00         DEFB #00,#00,#00,#00NOTE3         DEFB #20,#0A,#04,#00         DEFB #00,#00,#00,#00         DEFB #00,#00,#00,#00L421B         DEFS 2ENABLE         DEFB #00L421E         DEFS 2ADDR1         DEFW PARTIE1ADDR2         DEFW PARTIE2ADDR3         DEFW PARTIE3CHAN_FL         DEFB #00,#00,#00;TICKBLK;         DEFB #00,#00,#00,#00;         DEFB #00,#00,#00,#00;         DEFB #00,#00;TICKVAL;         DEFB #00,#00,#00,#00,#00;         DEFB #81;         DEFW TICKROUT;         DEFW #0000;PERIO    DEFB PERIODE;TCK_COUNT         DEFB #00;;EXECHAN(IX-Data du canal);   Execute un canal (sous IT)EXECHAN         LD   (L421E),HL         LD   A,(IX+&0c)     ;Compteur tempo (1 a l'init)         DEC  A         JR   Z,EXECHAN0         LD   (IX+&0c),A     ;Compteur tempo         RETEXECHAN0 LD   A,(IX+&0d)     ;Tempo         LD   (IX+&0c),A     ;Compteur tempo         LD   A,(IX+6)       ;Duree note (1 a l'init)         DEC  A         JR   Z,EXECHAN1         LD   (IX+6),A       ;Duree note         RETEXECHAN1 LD   H,(IX+8)       ;Pointeur partition         LD   L,(IX+7)         LD   A,(HL)         OR   A         JR   NZ,EXECHAN3    ;Barre de mesure (0)         INC  HL         LD   D,(IX+&0e)         LD   E,(IX+&0f)         LD   (IX+0),D         LD   (IX+1),E         LD   B,(IX+&0A)     ;Compteur de mesures         LD   C,(IX+&09)         DEC  BC         LD   (IX+9),C       ;Compteur de mesures         LD   (IX+&0A),B         LD   A,B         OR   C         JR   Z,EXECHAN2         LD   A,(HL)         OR   A         JR   NZ,EXECHAN3EXECHAN2 LD   B,(IX+&0B)     ;Fin de l'execution (double barre ou compteur a 0)         JP   EXEFINEXECHAN3 CP   &80         JR   C,EXECHAN4    ;Commande (Bit 7 a 1)         CALL RDCOM         LD   A,(HL)         JR   EXECHAN3    ;Note (non nul, bit 7 a 0)EXECHAN4 LD   DE,DUREES         LD   A,(HL)         AND  &0f         ADD  A,E         LD   E,A         JR   NC,EXECHAN5         INC  DEXECHAN5 LD   A,(DE)         LD   (IX+6),A         LD   A,(HL)         BIT  5,A         JR   Z,EXECHAN6         INC  HL         LD   (IX+7),L         LD   (IX+8),H         LD   B,(IX+&0B)         JP   NO_TONEDUREES         DEFB #03,#04,#09,#06         DEFB #0C,#18,#01,#01         DEFB #03,#04,#09,#09         DEFB #12,#24,#01,#01    ;Note avec tonalite (bit 5=0)EXECHAN6         INC  HL         BIT  6,A         JR   Z,EXECHAN8    ;Switch instrument         LD   A,(HL)         PUSH HL         PUSH IX         LD   B,(IX+&0B)     ;Numero voix         LD   C,(IX+&03)       ;Instrument 1         BIT  6,A         JR   Z,EXECHAN7         LD   C,(IX+4)       ;Instrument 2EXECHAN7 CALL SWINSTR         POP  IX         POP  HLEXECHAN8 LD   A,(HL)         INC  HL         LD   (IX+7),L       ;Pointeur partition         LD   (IX+8),H         AND  &3F         SRL  A         SRL  A         SRL  A         SRL  A         DEC  HL         LD   B,A         LD   A,(HL)         AND  &0f         LD   C,A         LD   H,(IX+0)         LD   L,(IX+1)         LD   A,B         OR   A         CALL NZ,SETMASK         LD   A,(IX+2)         PUSH IX         CALL L4458         POP  IX         LD   A,(IX+5)         ADD  A,E         LD   B,A         LD   C,D         PUSH IX         CALL L4427         POP  IX         LD   B,(IX+&0B)         JP   SETPER;MASKTAB         DEFB #01,#02,#04,#08         DEFB #10,#20,#40,#01         DEFB #02,#04,#08,#10         DEFB #20,#01,#02,#04;;SETMASK(IX-Data canal,C-Valeur,B-Flag);SETMASK  PUSH HL         LD   DE,MASKTAB         LD   A,C         ADD  A,E         JR   NC,SETMASK0         INC  DSETMASK0 LD   E,A         LD   A,B         LD   HL,&00FF         CP   3         JR   Z,SETMASK1         DEC  H         DEC  A         JR   NZ,SETMASK1         INC  LSETMASK1 LD   A,(DE)         AND  H         LD   H,A         LD   A,(DE)         XOR  &FF         AND  (IX+0)         OR   H         LD   (IX+0),A         LD   A,(DE)         AND  L         LD   L,A         LD   A,(DE)         XOR  &FF         AND  (IX+1)         OR   L         LD   (IX+1),A         POP  HL         RET;SENDALL         LD   IY,ENABLE         LD   A,&38     ;Tone A,B,C  !Noise A,B,C         LD   (IY+0),A         LD   IX,NOTE1         CALL SENDNOTE         LD   IX,NOTE2         CALL SENDNOTE         LD   IX,NOTE3         CALL SENDNOTE         LD   C,(IY+0)         LD   A,7       ;PSG Enable register         JP   PSGSEND;;GETDATA(HL-Pointeur);   Bit 7=0 -> JRGETDATA         LD   A,(HL)         AND  &80         JR   Z,GETDAT1GETDAT0  LD   A,(HL)         INC  HL         AND  &7F         RETGETDAT1  LD   DE,&0000         LD   E,(HL)         OR   A         SBC  HL,DE         JR   GETDAT0;;SENDNOTE(IX-Note);   Envoie une noteSENDNOTE         LD   H,(IX+6)  ;Noise pnt         LD   L,(IX+5)         CALL GETDATA         LD   C,A         LD   (IX+6),H  ;Noise pnt         LD   (IX+5),L         LD   A,(IY+0)  ;Enable noise         JR   Z,SENDNOT0         XOR  (IX+0)         LD   (IY+0),A  ;Enable         LD   A,6       ;PSG Moise period         CALL PSGSENDSENDNOT0 LD   L,(IX+3)  ;Ampl pnt         LD   H,(IX+4)         CALL GETDATA         LD   (IX+3),L  ;Ampl pnt         LD   (IX+4),H         AND  &0f         LD   H,0         LD   L,A         PUSH HL         POP  DE         LD   A,(IX+&0B) ;Volume         OR   ASENDNOT1 JR   Z,SENDNOT2         ADD  HL,DE         DEC  A         JR   SENDNOT1SENDNOT2 SRL  H         RR   L         SRL  H         RR   L         SRL  H         RR   L         SRL  H         RR   L         LD   C,L         LD   A,(IX+1)  ;PSG Amplitude         CALL PSGSEND         LD   H,(IX+8)  ;Tone pnt         LD   L,(IX+7)         CALL GETDATA         LD   (IX+8),H  ;Tone pnt         LD   (IX+7),L         LD   DE,&0000         LD   E,A         LD   HL,&0010         OR   A         SBC  HL,DE         LD   E,(IX+&09)  ;Periode note         LD   D,(IX+&0A)         OR   A         ADD  HL,DE         LD   C,L         LD   A,(IX+2)  ;PSG period fine tune         PUSH AF         CALL PSGSEND         POP  AF         INC  A         ;PSG period coarse tune         LD   C,H         JP   PSGSEND;L4427         LD   HL,PERIODES         LD   A,C         SLA  A         ADD  A,L         JR   NC,L4431         INC  HL4431:   LD   L,A         LD   A,B         INC  A         LD   E,(HL)         INC  HL         LD   D,(HL)         EX   DE,HLL4438:   DEC  A         RET  Z         SRL  H         RR   L         JR   L4438;;Periodes notes de la gamme;PERIODES         DEFW #0EEE         DEFW #0E18         DEFW #0D4D         DEFW #0C8E         DEFW #0BDA         DEFW #0B2F         DEFW #0A8F         DEFW #09F7         DEFW #0968         DEFW #08E1         DEFW #0861         DEFW #07E9;;        (HL-Ancien masque,A-ix+02,C-Valeur);L4458         LD   IX,L421B         LD   (L421B),HL         LD   HL,L44B0         OR   A         JR   NZ,L4468         LD   HL,L44ABL4468:   LD   E,0         LD   A,CL446B:   CP   7         JR   C,L4475         OR   A         SBC  A,7         INC  E         JR   L446BL4475:   PUSH AF         ADD  A,L         JR   NC,L447A         INC  HL447A:   LD   L,A         LD   D,(HL)         LD   A,B         OR   A         JR   NZ,L44BE         LD   HL,L44B7         POP  AF         ADD  A,L         JR   NC,L4488         INC  HL4488:   LD   L,A         LD   A,(HL)         AND  (IX+1)         JR   Z,L4495         AND  (IX+0)         JR   NZ,L449EL4494:   INC  DL4495:   LD   A,D         CP   &0c         RET  C         INC  E         SBC  A,&0c         LD   D,A         RETL449E:   CALL L4495         DEC  D         LD   A,D         CP   &0c         RET  C         ADD  A,&0c         DEC  E         LD   D,A         RET;L44AB         DEFB #04,#05,#07,#09,#0BL44B0         DEFB #0C,#0E,#10,#11,#13,#15,#17L44B7         DEFB #01,#02,#04,#08,#10,#20,#40;L44BE         POP  AF         LD   A,B         DEC  A         JR   Z,L4494         DEC  A         JR   Z,L449E         JR   L4495;;TABPT(HL-Table,DE-Taille elts,B-No elt);   Pointe dans une tableTABPT         ADD  HL,DE         DEC  B         JR   NZ,TABPT         RET;;NOTE_PT(B-Note nb)-> IX-Note table;NOTE_PT         LD   HL,NOTE1         DEC  B         LD   DE,&000C         CALL NZ,TABPT         PUSH HL         POP  IX         RET;;SWINSTR(B-Voix,C-Instrument);SWINSTR         CALL NOTE_PT         LD   HL,INSTRU         LD   DE,&0006         LD   B,C         DEC  B         CALL NZ,TABPT         INC  IX         INC  IX         INC  IX         PUSH IX         POP  DE         LD   BC,&0006         LDIR         RET;;SETENV(HL-Enveloppes,DE-Longueur enveloppes,IX-Data note);SETENV         LD   (IX+3),L         LD   (IX+4),H         ADD  HL,DE         LD   (IX+5),L         LD   (IX+6),H         ADD  HL,DE         LD   (IX+7),L         LD   (IX+8),H         RET;;NO_TONE(B-Voix);   Met la voix au silenceNO_TONE         CALL NOTE_PT         LD   DE,&0002         LD   HL,SILDAT         JR   SETENV;SILDAT         DEFB #80,#01,#80,#01,#8F,#01;;SETPER(B-Voix,HL-Periode);   Place la periode de la noteSETPER         PUSH HL         CALL NOTE_PT         POP  HL         LD   (IX+&09),L         LD   (IX+&0A),H         RET;;SETVOL(B-Voix,C-Volume);   Place le volume de la noteSETVOL         PUSH BC         CALL NOTE_PT         POP  BC         LD   (IX+&0B),C ;Volume         RET;;EXEFIN(B-Numero de note);   Stoppe le canalEXEFIN         PUSH BC         CALL NO_TONE         POP  BC         LD   C,B         LD   B,0         LD   HL,CHAN_FL-1         ADD  HL,BC         LD   A,0         LD   (HL),A         RET;PSGSEND         LD   B,&F4         OUT  (C),A         LD   B,&F6         IN   A,(C)         OR   &C0         OUT  (C),A         AND  &3F         OUT  (C),A         LD   B,#F4         OUT  (C),C         LD   B,#F6         LD   C,A         OR   #80         OUT  (C),A         OUT  (C),C         RET; ---------------------------psg_sound_reset:; ---------------------------	ld hl,normal_psg_value+10	ld d,10send_data_to_psg	ld c,(hl)	dec hl	call PSGSEND	dec d	jp p,send_data_to_psg	retnormal_psg_value	db 0,0,0,0,0,0,0,&3f,0,0,0	read "DoTC_Sound_Manager_Data.asm"