;*******************************************************************************;SPRITE.ASM                                                                    *;Bibliotheque des routines de sprites                                          *;*******************************************************************************;ANIMATE -    Execution d'une animation;INPUT   -    HL -> Adresse de l'animation;*******************************************************************************;LUTINIT -    Initialisation de la table des lutins;*******************************************************************************;LUTIN   -    Declaration d'un lutin au sprite manager;             Table des sprites en SPRBUF;             Buffer de sauvegarde en (ANIBUF);INPUT   -    A -> No du sprite;             L -> Ligne;             H -> Colonne;OUTPUT  -    CARRY -> Declaration OK;             NCARRY-> Plus de place dans le buffer de sauvegarde ecran;             A -> Numero du lutin cree;*******************************************************************************;LUTON   -    Affichage d'un lutin;INPUT   -    A -> Numero du lutin;*******************************************************************************;LUTOFF  -    Effacement d'un lutin;INPUT   -    A -> Numero du lutin;*******************************************************************************;LUTSAVE -    Sauvegarde de l'ecran sous un lutin;INPUT   -    A -> Numero du lutin;*******************************************************************************;LUTMODV -    Deplacement d'un lutin avec changement;INPUT   -    H -> Colonne;             L -> Ligne;             B -> Numero sprite;             A -> Numero lutin;*******************************************************************************;AFFSPR  -    Recherche et affichage d'un sprite.;             Table des sprites en SPRBUF;INPUT   -    A -> No du sprite;             L -> Ligne;             H -> Colonne;Modifies-    Aucun;*******************************************************************************;PUTSPR  -    Affichage d'un sprite;INPUT   -    HL-> Adresse ecran;             DE-> Sprite;             B -> Nombre d'octets par ligne;             C -> Nombre de lignes;Modifies-    Aucun;*******************************************************************************;GETSPR  -    Recherche d'un sprite;INPUT   -    HL-> Debut de la table des sprites;             A -> Numero du sprite;OUTPUT  -    HL-> Debut du sprite;             B -> Nombre d'octets par ligne;             C -> Nombre de lignes;Modifies-    HL,BC;*******************************************************************************;WHATREG -    Identification de la region pointee par la fleche;INPUT   -    Rien;OUTPUT  -    CARRY -> Region trouvee;             A -> Numero de la region pointee par la fleche;Modifies-    AF;*******************************************************************************;SCRADD  -    Calcul d'une adresse ecran;INPUT   -    H -> Colonne (0 -> 159);             L -> Ligne (199 -> 0);OUPUT   -    HL-> Adresse ecran;Modifies-    HL;*******************************************************************************;NEXTLINE-    Descend d'une ligne;INPUT   -    HL-> Adresse ecran courante;OUTPUT  -    HL-> Adresse ligne suivante;Modifies-    HL;*******************************************************************************;XORREG  -    Inversion d'une region a l'ecran;INPUT   -    HL-> Adresse ecran;             DE-> Sprite;             B -> Nombre d'octets par ligne;             C -> Nombre de lignes;Modifies-    Aucun;*******************************************************************************;AFFREG  -    Affichage d'une region;INPUT   -    B -> Numero de la region;Modifies-    Aucun;*******************************************************************************;;AMINATE;   Execution d'une animation;ANIMATEB         PUSH AF         PUSH HL         LD   A,#C9         LD   (QLUTOFF),A         LD   (QLUTSAV),A         LD   HL,PUTSPRB         LD   (QLONMOD+1),HL         LD   A,#CD         LD   (ANIMINT),A         LD   (ANIMINT+1),DE         POP  HL         POP  AF         CALL ANIMATE         PUSH HL         PUSH AF         LD   HL,PUTSPR         LD   (QLONMOD+1),HL         LD   A,#01         LD   (QLUTOFF),A         LD   (QLUTSAV),A         LD   HL,ANIMINT         DEC  A         LD   (HL),A         INC  HL         LD   (HL),A         INC  HL         LD   (HL),A         POP  AF         POP  HL         RETANIMATE         PUSH HL         PUSH BC         PUSH DE         PUSH AF         PUSH IX         LD   B,(HL)         INC  HLANIMBCL  PUSH BC         LD   A,(HL)         INC  HL         LD   C,A         AND  #07         PUSH AF         PUSH HL         LD   HL,LUTTAB+7         LD   DE,7         CALL RDTAB         PUSH HL         POP  IX         POP  HL         BIT  5,C         LD   B,(IX+00)         JR   Z,ANIMAT1         LD   B,(HL)         INC  HLANIMAT1  LD   D,(IX+01)         LD   E,(IX+02)         BIT  4,C         JR   Z,ANIMAT2         LD   E,(HL)         INC  HL         LD   D,(HL)         INC  HLANIMAT2  BIT  7,C         JR   Z,ANIMAT3         PUSH HL         LD   H,(IX+01)         LD   L,(IX+02)         LD   A,H         ADD  A,D         LD   D,A         LD   A,L         ADD  A,E         LD   E,A         POP  HLANIMAT3  POP  AF         EX   DE,HL         CALL LUTMODV         EX   DE,HL         BIT  3,C         JP   Z,ANIMSUI0         LD   A,(HL)         INC  HL         CALL MILPAUSEANIMINT  NOP         NOP         NOPANIMSUI0 POP  BC         DJNZ ANIMBCL         POP  IX         POP  AF         POP  DE         POP  BC         POP  HL         RET;;LUTTAB         DEFS NBLUT*7+7      ;Sprite/X/Y/Buffer/Taille;;LUTINIT;   Initialisation du sprite manager;LUTINIT         PUSH BC         PUSH HL         LD   HL,LUTTAB         LD   (HL),1         INC  HL         LD   B,NBLUT*7+6         ld c,0LUTINIT0	ld (hl),c         INC  HL         DJNZ LUTINIT0         LD   HL,(ANIBUF)         LD   (LUTTAB+3),HL         POP  HL         POP  BC         RET;;;LUTIN;   Declaration d'un lutin;LUTIN         PUSH HL         PUSH DE         PUSH BC         PUSH IX         LD   C,A         LD   IX,LUTTAB           ;Recherche d'une entree ds la table         LD   B,NBLUT         LD   DE,7LUTIN0   LD   A,(IX+00)         OR   A         JR   Z,LUTIN1         ADD  IX,DE         DJNZ LUTIN0         OR   A         JR   LUTINFLUTIN1   LD   A,NBLUT         SUB  B         PUSH AF         LD   (IX+00),C           ;Installation du No de sprite         LD   (IX+01),H           ;Installation des coordonnees         LD   (IX+02),L         LD   A,C         LD   HL,SPRBUF         CALL GETSPR         LD   HL,00               ;Calcul et installation de la taille         LD   D,h         LD   E,CLUTIN2   ADD  HL,DE         DJNZ LUTIN2         LD   (IX+05),L         LD   (IX+06),H         LD   L,(IX-04)           ;Calcul et install de l'adresse du buffer         LD   H,(IX-03)         LD   E,(IX-02)         LD   D,(IX-01)         ADD  HL,DE         LD   (IX+03),L         LD   (IX+04),H         LD   E,(IX+05)         LD   D,(IX+06)         ADD  HL,DE         LD   (ANIBUF),HL         LD   A,H         AND  #C0         JR   Z,OKLUTIN         OR   A         JR   LUTINFOKLUTIN  POP  AF         CALL LUTSAVE         SCFLUTINF   POP  IX         POP  BC         POP  DE         POP  HL         RET;;;LUTON;   Affichage d'un lutin;LUTON         PUSH AF         PUSH HL         PUSH DE         PUSH IX         LD   HL,LUTTAB+7         ;Recherche du lutin         LD   DE,7         CALL RDTAB         PUSH HL         POP  IX         LD   H,(IX+01)         LD   L,(IX+02)         LD   A,(IX+00)         CALL AFFSPR         POP  IX         POP  DE         POP  HL         POP  AF         RET;;;LUTOFF;   Effacement d'un lutin;LUTOFF         PUSH AF         PUSH HL         PUSH BC         PUSH DE         PUSH IX         LD   HL,LUTTAB+7         ;Recherche du lutin         LD   DE,7         CALL RDTAB         PUSH HL         POP  IX         LD   A,(IX+00)         LD   HL,SPRBUF         CALL GETSPR         LD   H,(IX+01)         LD   L,(IX+02)         CALL SCRADD         LD   E,(IX+03)         LD   D,(IX+04)         CALL LUTMSCR         POP  IX         POP  DE         POP  BC         POP  HL         POP  AF         RET;;;LUTSAVE;   Sauvegarde ecran sous un lutin;LUTSAVE         PUSH AF         PUSH HL         PUSH BC         PUSH DE         PUSH IX         LD   HL,LUTTAB+7         ;Recherche du lutin         LD   DE,7         CALL RDTAB         PUSH HL         POP  IX         LD   A,(IX+00)         LD   HL,SPRBUF         CALL GETSPR         LD   H,(IX+01)         LD   L,(IX+02)         CALL SCRADD         LD   E,(IX+03)         LD   D,(IX+04)         CALL LUTSCRM         POP  IX         POP  DE         POP  BC         POP  HL         POP  AF         RET;LUTMODV         PUSH AF         PUSH BC         PUSH DE         PUSH HL         PUSH IX         PUSH IY         PUSH BC         PUSH HL         CALL GETLUT         LD   (QLOFSZ+1),BC         LD   (QLOFBF+1),DE         LD   (QLOFAD+1),HL         LD   (QLSVBF+1),DE         POP  HL         LD   (IX+01),H         LD   (IX+02),L         CALL SCRADD         LD   (QLSVAD+1),HL         LD   (QLONAD+1),HL         POP  AF         LD   (IX+00),A         LD   HL,SPRBUF         CALL GETSPR         LD   (QLSVSZ+1),BC         LD   (QLONSZ+1),BC         LD   (QLONSP+1),HL         CALL #BD19         DI         CALL QLUTOFF         CALL QLUTSAV         CALL QLUTON         EI         POP  IY         POP  IX         POP  HL         POP  DE         POP  BC         POP  AF         RET;GETLUT         LD   HL,LUTTAB+7         LD   DE,7         CALL RDTAB         PUSH HL         POP  IX         LD   A,(IX+00)         LD   HL,SPRBUF         CALL GETSPR         PUSH HL         POP  IY         LD   H,(IX+01)         LD   L,(IX+02)         CALL SCRADD         LD   E,(IX+03)         LD   D,(IX+04)         RET;QLUTONQLONSZ   LD   BC,0QLONSP   LD   DE,0QLONAD   LD   HL,0QLONMOD  JP   PUTSPR;QLUTOFFQLOFSZ   LD   BC,0QLOFBF   LD   DE,0QLOFAD   LD   HL,0         JP   LUTMSCR;QLUTSAVQLSVSZ   LD   BC,0QLSVBF   LD   DE,0QLSVAD   LD   HL,0         JP   LUTSCRM;LUTSCRM         PUSH BC         PUSH HLLUTSAVE0 PUSH BC         PUSH HL         LD   C,B         LD   B,0         LDIR         POP  HL	INLINE_BC26_HL         POP  BC         DEC  C         JR   NZ,LUTSAVE0         POP  HL         POP  BC         RET;LUTMSCR         PUSH BC         PUSH HLLUTREST0 PUSH BC         PUSH HL         LD   C,B         LD   B,0         EX   DE,HL         LDIR         EX   DE,HL         POP  HL	INLINE_BC26_HL         POP  BC         DEC  C         JR   NZ,LUTREST0         POP  HL         POP  BC         RET;;;AFFSPR;   Recherche et affichage d'un sprite;AFFSPR         PUSH DE         PUSH BC         PUSH HL         CALL SCRADD         EX   DE,HL         LD   HL,SPRBUF         CALL GETSPR         EX   DE,HL         CALL PUTSPR         POP  HL         POP  BC         POP  DE         RET;;;AFFSPRB;   Recherche et affichage d'un sprite sans transparence;AFFSPRB         PUSH DE         PUSH BC         PUSH HL         CALL SCRADD         EX   DE,HL         LD   HL,SPRBUF         CALL GETSPR         EX   DE,HL         CALL PUTSPRB         POP  HL         POP  BC         POP  DE         RET;;;AFFSPRC;   Recherche et affichage d'un sprite avec effacement en couleur B;AFFSPRC         PUSH DE         PUSH BC         PUSH HL         CALL SCRADD         EX   DE,HL         LD   HL,SPRBUF         PUSH AF         LD   A,B         CALL ENCODE         LD   (FOND+1),A         POP  AF         CALL GETSPR         EX   DE,HL         CALL CLEAN         CALL PUTSPR         POP  HL         POP  BC         POP  DE         RET;;;PUTSPR;   Affichage d'un sprite;PUTSPR         PUSH AF         PUSH BC         PUSH DE         PUSH HLPUTSPR0  PUSH HL         PUSH BCPUTSPR1  LD   A,(DE)         AND  #AA         JR   NZ,PUTSPR2         LD   A,(HL)         AND  #AAPUTSPR2  LD   C,A         LD   A,(DE)         AND  #55         JR   NZ,PUTSPR3         LD   A,(HL)         AND  #55PUTSPR3  OR   C         LD   (HL),A         INC  DE         INC  HL         DJNZ PUTSPR1         POP  BC         POP  HL	INLINE_BC26_HL         DEC  C         JR   NZ,PUTSPR0         POP  HL         POP  DE         POP  BC         POP  AF         RET;;;PUTSPRB;   Affichage d'un sprite sans transparence;PUTSPRB         PUSH AF         PUSH BC         PUSH DE         PUSH HLPUTSPRB0 PUSH BC         PUSH HL	ld c,0	ex de,hlPUTSPRB1	inc c	ldi         DJNZ PUTSPRB1	ex de,hl         POP  HL	INLINE_BC26_HL         POP  BC         DEC  C         JR   NZ,PUTSPRB0         POP  HL         POP  DE         POP  BC         POP  AF         RET;;;CLEAN;   Effacement sous un sprite;CLEAN         PUSH HL         PUSH DE         PUSH BCCLEAN0   PUSH HL         PUSH BCFOND     LD   A,0CLEAN1   LD   (HL),A         INC  HL         DJNZ CLEAN1         POP  BC         POP  HL         CALL NEXTLINE         DEC  C         JR   NZ,CLEAN0         POP  BC         POP  DE         POP  HL         RET;;;GETSPR;   Recherche d'un sprite;GETSPR         PUSH DE         PUSH AFGETSPR0  LD   E,(HL)         INC  HL         LD   D,(HL)         INC  HL         DEC  A         JR   Z,GETSPR1         ADD  HL,DE         JR   GETSPR0GETSPR1  LD   C,(HL)         INC  HL         LD   B,(HL)         INC  HL         POP  AF         POP  DE         RET;;;WHATREG;   Identification de la region pointee par la fleche;WHATREG         PUSH BC         PUSH DE         PUSH HL         PUSH IX         CALL TFLECHE         LD   C,A         LD   B,NBREGWHATREG0 PUSH BC         LD   A,B         LD   HL,SPRBUF         CALL GETSPR         EX   DE,HL         CALL GETREG         LD   L,(IX+10)      ;LIGNE         LD   H,(IX+11)      ;COLONNE; INSQUARE         LD   A,(FLROW)         CP   L         JR   Z,INSQ1         jr NC,INSQUARE_ENDINSQ1    ADD  A,C         CP   L         jr Z,INSQUARE_END         JR   C,INSQ2         LD   A,(FLCOL)         CP   H         JR   C,INSQ2         SLA  B         SUB  B         SRL  B         CP   H         jr INSQUARE_ENDINSQ2    CCFINSQUARE_END         JR   C,WHATREG4         POP  BC         JR   WHATREG3WHATREG4 CALL SCRADD         CALL #BD19          ;MC WAIT FLYBACK         DI         CALL XORREG         CALL TFLECHE         CALL XORREG         EI         POP  BC         CP   C         JR   NZ,WHATREG1WHATREG3 DJNZ WHATREG0         XOR  A         JR   WHATREG2WHATREG1 LD   A,B         SCFWHATREG2 POP  IX         POP  HL         POP  DE         POP  BC         RET;;SCRADD;   Calcul d'une adresse ecran;SCRADD         PUSH AF         PUSH BC         PUSH DE         LD   E,H         LD   H,0	ld d,h         SLA  E         RL   D         CALL #BC1D     ;SCR DOT POSITION         POP  DE         POP  BC         POP  AF         RET;;;NEXTLINE;   Descend d'une ligne;NEXTLINE         PUSH AF         LD   A,H         ADD  A,#08         LD   H,A         JR   NC,NEXTLIN0	ld a,l	add a,#50	ld l,a	ld a,h	adc a,-#40	res 3,a	ld h,aNEXTLIN0 POP  AF         RET;;;;XORREG;   Inversion d'une region a l'ecran;XORREG         PUSH AF         PUSH BC         PUSH DE         PUSH HLXORREG0  PUSH BC         PUSH HLXORREG1  LD   A,(DE)         XOR  (HL)         LD   (HL),A         INC  HL         INC  DE         DJNZ XORREG1         POP  HL	INLINE_BC26_HL         POP  BC         DEC  C         JR   NZ,XORREG0         POP  HL         POP  DE         POP  BC         POP  AF         RET;;;AFFREG;   Affichage d'une region;AFFREG         PUSH AF         PUSH BC         PUSH DE         PUSH HL         PUSH IX         PUSH IY         LD   (COUR_REG+1),A         LD   (COUR_RE2+1),A         LD   HL,SPRBUF         CALL GETSPR         EX   DE,HL         CALL GETREG         LD   A,(IX+7)       ;PROPRIO         OR   A         JR   NZ,AFFRE0         LD   A,13         JR   AFFRE1AFFRE0   CALL GETLORD         LD   A,(IY+6)         LD   HL,CHATO         PUSH DE         LD   DE,4         CALL RDTAB         POP  DE         LD   A,(HL)AFFRE1   CALL ENCODE         LD   (AFFREG2+1),A         LD   L,(IX+10)      ;LIGNE         LD   H,(IX+11)      ;COLONNE         CALL SCRADDAFFREG0  PUSH HL         PUSH BCAFFREG1  LD   A,(DE)         CPL         AND  (HL)         LD   C,A         LD   A,(DE)AFFREG2  AND  0         OR   C         LD   (HL),A         INC  DE         INC  HL         DJNZ AFFREG1         POP  BC         POP  HL	INLINE_BC26_HL         DEC  C         JR   NZ,AFFREG0         LD   A,(LORD)         CALL GETLORD         LD   A,(IX+00)         OR   A         JR   Z,AFFREGNC         ADD  A,19         LD   L,(IX+12)         LD   H,(IX+13)         CALL AFFSPR         LD   A,(IY+06)         LD   HL,CHATO+1         PUSH DE         LD   DE,4         CALL RDTAB         POP  DECOUR_REG LD   A,0         CP   (HL)         JR   NZ,AFFREGNC         LD   A,(IX+12)         ADD  A,6         LD   L,A         LD   A,(IX+13)         ADD  A,4         LD   H,A         LD   A,24         CALL AFFSPRAFFREGNCCOUR_RE2 LD   A,0         CP   (IY+07)         JR   NZ,AFFREGNH         LD   A,23         LD   L,(IX+14)         LD   H,(IX+15)         CALL AFFSPRAFFREGNH POP  IY         POP  IX         POP  HL         POP  DE         POP  BC         POP  AF         RET;